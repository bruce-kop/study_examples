'''
re.X:该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。
?=
(?=.*[a-z])”只进行匹配，并不占有字符，也不将匹配的内容保存到最终的匹配结果，所以都是零宽度的
'''

import re

reg1 = re.compile(r'''^(?:(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])|
              (?=.*[A-Z])(?=.*[a-z])(?=.*[^A-Za-z0-9])|
              (?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])|
              (?=.*[a-z])(?=.*[0-9])(?=.*[^A-Za-z0-9])).{8,32}$''')

reg = re.compile('''
# 以字母开头 
^(?:#表示非捕获分组 
(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])|#表示非捕获分组 
(?=.*[A-Z])(?=.*[a-z])
(?=.*[^A-Za-z0-9])|
(?=.*[A-Z])(?=.*[0-9])
(?=.*[^A-Za-z0-9])|
(?=.*[a-z])(?=.*[0-9])
(?=.*[^A-Za-z0-9]))
.{8,32}
$''',re.X)


print(reg1.match("Abc123456+").group())
print(reg.match("Abc123456+").group())

reg2 = re.compile('''
^(?=[A-Z])(?=.*[a-z])(?=.*[0-9]).{8,32}$''',re.X)
print(reg2.match("S+t").group())

reg4 = re.compile('''^win(?=95|98|NT|2000)95z''')
print(reg4.match("win96z").group())


